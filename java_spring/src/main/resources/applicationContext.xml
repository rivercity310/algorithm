<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!-- [ 2. component-scan 설정: 클래스 패스 내 @Component가 설정된 클래스들을 자동으로 객체 생성 ] -->
    <context:component-scan base-package="com.example.java_spring.polymorphism"></context:component-scan>
    <bean id="sony" class="com.example.java_spring.polymorphism.speaker.SonySpeaker" />       <!-- 변경 가능성이 있는 객체만 bean 등록, 나머지는 스캔 -->


    <!-- [ 1. component-scan 없이 직접 bean 등록하기 ] -->
    <!-- scope: default는 singleton, prototype은 요청할 때마다 객체 생성-->
    <!-- lazy-init: 객체 생성 요청(클라이언트 요청)이 들어올 때 객체 생성, default는 즉시 로딩 방식-->
    <!--<bean id="tv" class="com.example.java_spring.polymorphism.tv.SamsungTV" scope='singleton' init-method="initMethod" destroy-method="destroyMethod">
        <constructor-arg index="0" ref="apple"></constructor-arg>  &lt;!&ndash; 생성자 인젝션 &ndash;&gt;
        <constructor-arg index="1" value="2700000"></constructor-arg>
    </bean>

    <bean id="lgTv" class="com.example.java_spring.polymorphism.tv.LgTV" scope='prototype' lazy-init="true">
        <property name="speaker" ref="sony"></property>        &lt;!&ndash; Setter 인젝션 name 속성에는 세터 메서드 이름에서 앞에 set을 제거하고 첫글자를 소문자로 바꾼 이름이 들어감 &ndash;&gt;
        <property name="price" value="2000000"></property>
    </bean>

    <bean id="sony" class="com.example.java_spring.polymorphism.speaker.SonySpeaker" />
    <bean id="apple" class="com.example.java_spring.polymorphism.speaker.AppleSpeaker" />-->
</beans>